@use '../mixins-vars/animations.scss' as animations;
@use '../mixins-vars/paddings.scss' as paddings;
@use '../theme/collections.scss' as colors;
@use '../font/size.scss' as font-size;

button,
.button {
  @include paddings.padding('x', 3);
  @include paddings.padding('y', 2);
  border-radius: paddings.size(3);
  background-color: transparent;
  border: 1px solid transparent;
  font-size: font-size.$button;
  color: var(--text-default);
  cursor: pointer;
}

@each $name in colors.$main {
  .button-#{$name} {
    background-color: var(--#{$name});
    color: var(--#{$name}-alt);
  }

  .button-#{$name}-inverse {
    background-color: var(--#{$name}-alt);
    color: var(--#{$name});
  }
}
.button-error {
  background-color: transparent;
  border-color: var(--error) !important;
  color: hsla(0, 73%, 97%, 1);
}
.button-dark {
  background-color: hsla(212, 28%, 17%, 1);
  color: white;
}

.text-button {
  @extend .button;
  @include paddings.padding('y', 3);
  @include paddings.padding('x', 3);
  border: 0px solid transparent;
}

.icon-button {
  @extend .text-button;
  border-radius: 50%;
  background-color: transparent;
  color: var(--icon-button-text);
  font-size: 1.5em;
  padding: 0;
}

input {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}
input[type='submit'],
button[type='submit'],
.submit-button {
  @include paddings.padding('y', 3);
  @include paddings.padding('x', 4);
  font-size: 1.25rem;
  border-radius: paddings.$p-3;
  border: 1px solid transparent;
  cursor: pointer;
}

.ghost-button {
  & {
    transition: color animations.$short-duration animations.$default-mode,
      background-color animations.$short-duration animations.$default-mode;
    background-color: transparent;
    color: var(--ghost-button);
    mix-blend-mode: screen;
    border: 1px solid transparent;
  }

  &.active {
    border-color: var(--ghost-button);
  }

  &:hover,
  &.focused {
    background-color: var(--ghost-button);
    color: black; // black = delete background color
  }
}
