$p-0: 0rem; //        0px
$p-1: 0.125rem; //    2px
$p-2: 0.25rem; //     4px
$p-3: 0.5rem; //      8px
$p-4: 1rem; //       16px
$p-5: 2rem; //       32px
$p-6: 4rem; //       64px

$p-xs: 0.1875rem; //  3px
$p-sm: 0.375rem; //   6px
$p-md: 0.75rem; //   12px
$p-lg: 1.5rem; //    24px
$p-xl: 3rem; //      48px

$sizes: (
  '0': $p-0,
  '1': $p-1,
  'xs': $p-xs,
  '2': $p-2,
  'sm': $p-sm,
  '3': $p-3,
  'md': $p-md,
  '4': $p-4,
  'lg': $p-lg,
  '5': $p-5,
  'xl': $p-xl,
  '6': $p-6,
);

@function size($size) {
  @return map-get($sizes, #{$size});
}

@mixin padding($type, $size, $important: false) {
  $value: map-get($sizes, #{$size});

  $abbrs: (
    'x': (
      'right',
      'left',
    ),
    'r': (
      'right',
    ),
    'l': (
      'left',
    ),
    'y': (
      'bottom',
      'top',
    ),
    'b': (
      'bottom',
    ),
    't': (
      'top',
    ),
    '*': (
      '',
    ),
  );

  $direction-list: map-get($abbrs, $type);

  @if not $value {
    @error "Invalid size #{$size}";
  }

  @if not $direction-list {
    @error "Invalid padding type #{$type}.";
  }

  @each $direction in $direction-list {
    $property-name: if($direction== '', 'padding', 'padding-#{$direction}');

    @if $important {
      #{$property-name}: $value !important;
    } @else {
      #{$property-name}: $value;
    }
  }
}

@each $name, $size in $sizes {
  .p-#{$name} {
    @include padding('*', $name, $important: true);
  }
}
@each $name, $size in $sizes {
  .px-#{$name} {
    @include padding('x', $name, $important: true);
  }
}
@each $name, $size in $sizes {
  .pr-#{$name} {
    @include padding('r', $name, $important: true);
  }
}
@each $name, $size in $sizes {
  .pl-#{$name} {
    @include padding('l', $name, $important: true);
  }
}
@each $name, $size in $sizes {
  .py-#{$name} {
    @include padding('y', $name, $important: true);
  }
}
@each $name, $size in $sizes {
  .pb-#{$name} {
    @include padding('b', $name, $important: true);
  }
}
@each $name, $size in $sizes {
  .pt-#{$name} {
    @include padding('t', $name, $important: true);
  }
}
