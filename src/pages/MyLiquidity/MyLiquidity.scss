@use '../../styles/mixins-vars/paddings.scss' as paddings;
@use '../../styles/font/weight.scss' as font-weight;
@use '../../styles/font/size.scss' as font-size;

.no-liquidity .add-liquidity {
  font-size: font-size.$h3;
  font-weight: font-weight.$medium;
}

.no-liquidity {
  align-items: center;
}

.my-liquidity-page {
  .table-card {
    // todo: maybe fix better:
    // the cards look a little strange if they get too long
    max-height: 35em;

    .text-action-button {
      color: var(--secondary);
    }
  }

  .asset-list-card {
    .table-card__table {
      // style first column
      th,
      td {
        text-align: left;
        width: 50%;
        min-width: 7em;
      }
      // style second and third columns
      th + th,
      td + td {
        min-width: auto;
        text-align: right;
        width: 30%;
      }
      th + th + th,
      td + td + td {
        text-align: right;
        width: 20%;
        min-width: 5em;
      }
    }
  }

  .asset-list-card,
  .pool-list-card {
    // ensure enough space to read current list without scrolling horizontally
    .table-card__table_container {
      min-width: 32em;
    }
  }
}

.home-hero-section {
  // allow left column to stretch much more than the right column
  .home-hero-section__left {
    flex-grow: 1000;
  }

  .hero-card {
    flex: 1 1 auto;
    justify-content: space-between;
    display: grid;
    grid-template-columns: auto auto auto;

    .hero-card__hero-value {
      font-size: 2.25rem;
      font-weight: font-weight.$bold;
    }

    // add gradient border through some hacks
    // disadvantage of this approach is that all the direct children elements
    // have a relative position and z-index of 1 (which should be fine)
    position: relative;
    border: 1px solid transparent;
    border-radius: paddings.$p-4;
    & > * {
      position: relative;
      z-index: 1;
    }
    &::before,
    &::after {
      content: '';
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      border-radius: inherit;
    }
    &::before {
      background: linear-gradient(
        to top right,
        hsl(165, 83%, 57%),
        hsl(165, 0%, 85%)
      );
    }
    &::after {
      border: 1px solid transparent;
      background: linear-gradient(
          to bottom right,
          hsla(0, 0%, 100%, 0.2),
          transparent
        ),
        var(--bg);
      background-clip: padding-box;
    }
  }
}
