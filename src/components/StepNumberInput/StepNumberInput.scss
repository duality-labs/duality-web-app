@use '../../styles/mixins-vars/paddings.scss' as paddings;
@use '../../styles/mixins-vars/margins.scss' as margins;
@use '../../styles/font/family.scss' as font-family;
@use '../../styles/components/cards.scss' as cards;
@use '../../styles/font/size.scss' as font-size;

$border-width: 2px;

.range-step-input {
  & {
    padding: paddings.$p-4 paddings.$p-5;
    border-radius: paddings.$p-4;
    border: $border-width solid var(--card-border);
    flex-direction: column;
    overflow: hidden;
    display: flex;
    justify-content: center;
  }

  .range-step-title {
    @include margins.margin('y', 2);
    @include margins.margin('x', 0);
    color: var(--ghost-button);
    font-size: font-size.$h4;
    text-align: center;
    width: 100%;
  }

  .range-step-description {
    @include margins.margin('y', 1);
    @include margins.margin('x', 0);
    color: var(--text-default);
    font-size: font-size.$text-m;
    text-align: center;
    width: 100%;
  }

  .range-step-controls {
    & {
      flex-direction: row;
      display: flex;
    }

    button {
      & {
        @include paddings.padding('*', 2);
        border-radius: paddings.$p-2;
        background-color: var(--text-default);
        opacity: 0.8;
        font-size: font-size.$button-large;
        font-family: font-family.$console;
        border: 0px none transparent;
        box-sizing: content-box;
        line-height: 1em;
        aspect-ratio: 1;
        flex: 0 0 auto;
        color: var(--page-card);
        height: 1em;
        width: 1em;
      }

      &:disabled {
        filter: brightness(50%);
        cursor: not-allowed;
      }
    }

    input,
    span {
      @include paddings.padding('y', 0);
      @include paddings.padding('x', 4);
      font-family: font-family.$console;
      background-color: transparent;
      border: 0px none transparent;
      font-size: font-size.$input;
      line-height: 1em;
      text-align: center;
      color: var(--text-default);
      flex: 1 1 auto;
      outline: none;
      width: 100%;
      // allow inline sizing by number of characters (eg. 5ch) to work as intended
      // sizes the width to the text input area, and padding is added to that width
      box-sizing: content-box;
      overflow-wrap: normal;
    }
    // override styling for span as text placement inside padding border
    span {
      @include paddings.padding('y', 0);
      @include paddings.padding('x', 0);
      @include margins.margin('y', 0);
      @include margins.margin('x', 4);
      overflow: hidden;
      // align height to input style
      display: flex;
      justify-content: center;
      align-items: center;
    }

    input[type='number'] {
      /* For Chrome and Safari  */
      &::-webkit-outer-spin-button,
      &::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
      }

      /* For Firefox  */
      & {
        -moz-appearance: textfield;
      }
    }
  }
}
