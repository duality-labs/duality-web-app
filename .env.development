
# Chain
REACT_APP__BUILD_NUMBER=dev

REACT_APP__IS_MAINNET=testnet
REACT_APP__DEFAULT_PAIR=NTRN/ATOM

# Add development tokens
REACT_APP__DEV_NATIVE_ASSET_MAP={"tokenA":"NTRN/neutron","tokenB":"ATOM/cosmoshub","tokenC":"USDC/ethereum","tokenD":"DAI/gateway","tokenE":"HUAHUA/chihuahua"}
# Add prices for development tokens
REACT_APP__DEV_ASSET_PRICE_MAP={"STK":1,"TKN":1}

# Override chain settings
REACT_APP__CHAIN_ID=duality-devnet
REACT_APP__CHAIN_NAME=duality-devnet
REACT_APP__CHAIN_PRETTY_NAME=Duality Devnet
REACT_APP__CHAIN_FEE_TOKENS=[{"denom":"tokenA"}]

REACT_APP__CHAIN_REGISTRY_ENDPOINTS=["https://registry.ping.pub","https://proxy.atomscan.com/directory","https://raw.githubusercontent.com/cosmos/chain-registry/master"]
REACT_APP__CHAIN_REGISTRY_CHAIN_NAMES=["celestiatestnet3","noistestnet","nolustestnet","osmosistestnet"]

# An example of using bridged IBC tokens as fee tokens in the consumer chain:
# note: IBC denom trace "transfer/channel-0/uatom" is
#       IBC denom hash "ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2"
#
# if you are using the integrated tests CosmoPark environment locally:
# the Gaia instance of uatom will be the IBC token "ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2" on the neutron chain
# you can send this token from "val1" on Gaia to "demowallet1" on Neutron by using the commands:
# $ docker compose -f setup/docker-compose.yml exec gaia-node /bin/sh
# $ from="val1"
# $ to="demowallet1"
# $ ibc_demo_cosmos_address=$( gaiad --home /opt/node/data/test-2 keys --keyring-backend test show $to -a )
# $ ibc_demo_neutron_address=$( gaiad --home /opt/node/data/test-2 debug bech32-convert -p neutron $ibc_demo_cosmos_address 2>&1 )
# $ gaiad --home /opt/node/data/test-2 --chain-id test-2 tx ibc-transfer transfer transfer channel-0 $ibc_demo_neutron_address 10000000uatom --from $from --keyring-backend test --gas 10000000 --fees 50000uatom -y
# or in one line (for copy-pasting):
# $ docker compose -f setup/docker-compose.yml exec gaia-node /bin/sh -c "gaiad --home /opt/node/data/test-2 --chain-id test-2 tx ibc-transfer transfer transfer channel-0 \$( gaiad --home /opt/node/data/test-2 debug bech32-convert -p neutron \$( gaiad --home /opt/node/data/test-2 keys --keyring-backend test show demowallet1 -a ) 2>&1 ) 10000000uatom --from val1 --keyring-backend test --gas 10000000 --fees 50000uatom -y"
# and using specifically the existing user keys
# REACT_APP__CHAIN_ID={"chain_id":"test-1"}
# REACT_APP__CHAIN_FEE_TOKENS=[{"denom":"untrn"},{"denom":"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2"}]

# overwrite found chain info and assets here:
# REACT_APP__DEV_CHAINS=[{"chain_name":"cosmoshubtestnet","staking":{"staking_tokens":[{"denom":"uatom"}]},"apis":{"rpc":[{"address":"http://localhost:16657"}],"rest":[{"address":"http://localhost:1316"}]},"status":"live","network_type":"testnet","pretty_name":"Local Gaia","chain_id":"test-2","bech32_prefix":"cosmos","slip44":118,"logo_URIs":{"svg":"https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"}}]
# REACT_APP__DEV_ASSETS=[{"chain_name":"cosmoshubtestnet","assets":[{"description":"Local Gaia Atom","address":"stake","denom_units":[{"denom":"uatom","exponent":0},{"denom":"atom","exponent":6}],"base":"uatom","name":"Atom","display":"atom","symbol":"ATOM","logo_URIs":{"svg":"https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"},"coingecko_id":"cosmos"}]}]
