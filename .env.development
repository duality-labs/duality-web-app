
# Chain
REACT_APP__BUILD_NUMBER=dev

REACT_APP__IS_MAINNET=testnet
REACT_APP__DEFAULT_PAIR=NTRN/ATOM

# Add development tokens
REACT_APP__DEV_NATIVE_ASSET_MAP={"tokenA":"NTRN/neutron","tokenB":"ATOM/cosmoshub","tokenC":"USDC/ethereum","tokenD":"DAI/gateway","tokenE":"HUAHUA/chihuahua"}
# Add prices for development tokens
REACT_APP__DEV_ASSET_PRICE_MAP={"STK":1,"TKN":1}

# Override chain settings
REACT_APP__CHAIN_ID=duality-devnet
REACT_APP__CHAIN_NAME=duality-devnet
REACT_APP__CHAIN_PRETTY_NAME=Duality Devnet

# the testnet fee token can either be a test token or a bridged ATOM ("transfer/channel-0/uatom")
REACT_APP__CHAIN_FEE_TOKENS=[{"denom":"tokenA"},{"denom":"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2"}]

REACT_APP__CHAIN_REGISTRY_PATH_ENDPOINTS=["https://api.github.com/repos/cosmos/chain-registry/contents","https://registry.ping.pub"]
REACT_APP__CHAIN_REGISTRY_FILE_ENDPOINTS=["https://raw.githubusercontent.com/cosmos/chain-registry/master","https://registry.ping.pub"]
REACT_APP__CHAIN_REGISTRY_CHAIN_NAMES=["celestiatestnet3","noistestnet","nolustestnet","osmosistestnet"]

REACT_APP__CHAIN_REGISTRY_ASSET_LISTS=[{"\$schema":"../../assetlist.schema.json","chain_name":"neutrontestnet","assets":[{"description":"The native token of Neutron chain","denom_units":[{"denom":"untrn","exponent":0},{"denom":"ntrn","exponent":6}],"base":"untrn","name":"Neutron Testnet","display":"ntrn","symbol":"NTRN","logo_URIs":{"png":"https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/neutrontestnet/images/neutron.png","svg":"https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/neutrontestnet/images/neutron.svg"},"images":[{"png":"https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/neutrontestnet/images/neutron.png","svg":"https://raw.githubusercontent.com/cosmos/chain-registry/master/testnets/neutrontestnet/images/neutron.svg"}]},{"description":"The native staking and governance token of the Theta testnet version of the Cosmos Hub.","denom_units":[{"denom":"uibcatom","aliases":["uatom"],"exponent":0},{"denom":"atom","exponent":6}],"base":"uibcatom","name":"Cosmos","display":"atom","symbol":"ATOM","logo_URIs":{"png":"https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png","svg":"https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"},"images":[{"png":"https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.png","svg":"https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/images/atom.svg"}]},{"description":"USD Coin","denom_units":[{"denom":"uibcusdc","exponent":0,"aliases":["uusdc","microusdc"]},{"denom":"usdc","exponent":6}],"base":"uibcusdc","display":"usdc","name":"USD Coin","symbol":"USDC","logo_URIs":{"svg":"https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"},"images":[{"svg":"https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/usdc.svg"}]},{"description":"wstETH on Neutron","denom_units":[{"denom":"factory/neutron1xdtwh5jr4zjx8g3zh29jud75c666wua7tsmum3ajm6ylf782etfs60dj2h/wstETH","exponent":0},{"denom":"wstETH","exponent":18}],"base":"factory/neutron1xdtwh5jr4zjx8g3zh29jud75c666wua7tsmum3ajm6ylf782etfs60dj2h/wstETH","name":"wstETH","display":"wstETH","symbol":"wstETH","traces":[{"type":"additional-mintage","counterparty":{"chain_name":"ethereum","base_denom":"0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0"},"provider":"Lido"}],"images":[{"image_sync":{"chain_name":"ethereum","base_denom":"0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0"},"svg":"https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wsteth.svg"}],"logo_URIs":{"svg":"https://raw.githubusercontent.com/cosmos/chain-registry/master/_non-cosmos/ethereum/images/wsteth.svg"}}]}]
REACT_APP__CHAIN_REGISTRY_CHAINS=
REACT_APP__CHAIN_REGISTRY_IBC_DATA=

# An example of using bridged IBC tokens as fee tokens in the consumer chain:
# note: IBC denom trace "transfer/channel-0/uatom" is
#       IBC denom hash "ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2"
#
# if you are using the integrated tests CosmoPark environment locally:
# the Gaia instance of uatom will be the IBC token "ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2" on the neutron chain
# you can send this token from "val1" on Gaia to "demowallet1" on Neutron by using the commands:
# $ docker compose -f setup/docker-compose.yml exec gaia-node /bin/sh
# $ from="val1"
# $ to="demowallet1"
# $ ibc_demo_cosmos_address=$( gaiad --home /opt/node/data/test-2 keys --keyring-backend test show $to -a )
# $ ibc_demo_neutron_address=$( gaiad --home /opt/node/data/test-2 debug bech32-convert -p neutron $ibc_demo_cosmos_address 2>&1 )
# $ gaiad --home /opt/node/data/test-2 --chain-id test-2 tx ibc-transfer transfer transfer channel-0 $ibc_demo_neutron_address 10000000uatom --from $from --keyring-backend test --gas 10000000 --fees 50000uatom -y
# or in one line (for copy-pasting):
# $ docker compose -f setup/docker-compose.yml exec gaia-node /bin/sh -c "gaiad --home /opt/node/data/test-2 --chain-id test-2 tx ibc-transfer transfer transfer channel-0 \$( gaiad --home /opt/node/data/test-2 debug bech32-convert -p neutron \$( gaiad --home /opt/node/data/test-2 keys --keyring-backend test show demowallet1 -a ) 2>&1 ) 10000000uatom --from val1 --keyring-backend test --gas 10000000 --fees 50000uatom -y"
# and using specifically the existing user keys
# REACT_APP__CHAIN_ID={"chain_id":"test-1"}
# REACT_APP__CHAIN_FEE_TOKENS=[{"denom":"untrn"},{"denom":"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2"}]
